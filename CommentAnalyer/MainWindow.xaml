<?xml version="1.0" encoding="utf-8"?>
<Window
	x:Class="CommentAnalyer.MainWindow" 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:local="clr-namespace:CommentAnalyer"
	xmlns:vm="clr-namespace:CommentAnalyer.ViewModel"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:winform="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
	Title="代码规范检查工具"
	Height="700"
	Width="1300"
	Loaded="Window_Loaded"
	WindowStartupLocation="CenterScreen"
	Closing="Window_Closing">
	<Window.Resources>
		<local:BooleanToVisibilityConverter
			x:Key="Bool2VisibilityConverter" />
		<Style
			TargetType="TextBlock">
			<Setter
				Property="HorizontalAlignment"
				Value="Center" />
			<Setter
				Property="VerticalAlignment"
				Value="Center" />
		</Style>
	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="auto" />
			<RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="350" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
        <Menu
			Grid.Row="0"
			Grid.ColumnSpan="2">
            <MenuItem
				Header="文件(_F)">
                <MenuItem
					Header="新建(_N)"
					Command="{Binding NewCommand}" />
                <MenuItem
					Header="打开(_O)" Click="openFileBtn_Click"/>
                <MenuItem
					Header="关闭(_C)" Command="Close"/>
                <Separator />
                <MenuItem
					Header="保存(_S)" Command="Save"/>
                <MenuItem
					Header="另存为(_A)" Command="SaveAs"/>
                <Separator />
                <MenuItem
					Header="打印(_P)" Command="Print"/>
                <Separator />
                <MenuItem
					Header="最近打开的文件(_F)" />
                <Separator />
                <MenuItem
					Header="退出(_X)" />
            </MenuItem>
            <MenuItem
				Header="编辑(_E)">
                <MenuItem
					Header="撤销(_U)" Command="Undo"/>
                <MenuItem
					Header="重做(_R)" Command="Redo"/>
                <Separator />
                <MenuItem
					Header="剪切(_T)" Command="Cut"/>
                <MenuItem
					Header="复制(_C)" Command="Copy"/>
                <MenuItem
					Header="粘贴(_P)" Command="Paste"/>
                <MenuItem
					Header="删除(_D)" Command="Delete"/>
                <Separator />
                <MenuItem
					Header="全选(_A)"/>
                <MenuItem
					Header="查找(_F)" Command="Find"/>
                <MenuItem
					Header="替换(_S)" Command="Replace"/>
                <MenuItem
					Header="跳转到...(_G)"/>
            </MenuItem>
            <MenuItem
				Header="工具(_T)">
                <!--<MenuItem.DataContext>
					<vm:NormalFormatViewModel/>
				</MenuItem.DataContext>-->
                <MenuItem
					Header="提取输入输出端口" Command="{Binding ListInputsOutputs}"/>
                <MenuItem
					Header="提取reg/wire变量" Command="{Binding ListRegWire}"/>
                <MenuItem
					Header="变量名追溯" />
                <MenuItem
					Header="生成状态转移图" />
                <MenuItem
					Header="生成单个模块图" />
                <MenuItem
					Header="生成模块层次图" />
                <MenuItem
					Header="显示VCD波形文件" />
            </MenuItem>
            <MenuItem
				Header="规范格式(_M)">
                <MenuItem
					Header="规范(对齐、换行)注释" />
                <MenuItem
					Header="规范 begin end" Command="{Binding FormatCodeCommand}" CommandParameter="beginend"/>
                <MenuItem
					Header="规范 assign/parameter语句" />
                <MenuItem
					Header="规范缩进" />
                <MenuItem
					Header="规范模块例化的标点和括号" />
                <Separator />
                <MenuItem
					Header="执行以上全部规范" />
            </MenuItem>
            <MenuItem
				Header="规范检查(_C)">
                <MenuItem
					Header="变量名过长" Click="DetectLongNameMenuItem_Click"/>
                <MenuItem
					Header="未用到的变量/管脚" Click="DetectUnusedVarMenuItem_Click"/>
                <MenuItem
					Header="是否使用三段式状态机" />
                <MenuItem
					Header="跨时钟域信号检测" />
                <MenuItem
					Header="文件名与Module名一致性" Click="DetectFileModuleNameMenuItem_Click"/>
                <MenuItem
					Header="是否存在多个Module" Click="DetectMultiModuleMenuItem_Click"/>
                <MenuItem
					Header="IF分支数目检测(超过5个)"  Click="DetectIfMenuItem_Click"/>
            </MenuItem>
            <MenuItem
				Header="代码生成(_G)">
                <MenuItem.DataContext>
                    <vm:GeneCodeViewModel/>
                </MenuItem.DataContext>
                <MenuItem
					Header="生成寄存器堆" Command="{Binding GeneCodeCommand}" CommandParameter="regheap"/>
                <MenuItem
					Header="生成RAM文件" Command="{Binding GeneCodeCommand}" CommandParameter="ram"/>
                <MenuItem
					Header="生成FIFO文件" Command="{Binding GeneCodeCommand}" CommandParameter="fifo"/>
                <MenuItem
					Header="生成例化文件" Command="{Binding GeneCodeCommand}" CommandParameter="lihua"/>
                <Separator />
                <MenuItem
					Header="生成打拍代码" Command="{Binding GeneCodeCommand}" CommandParameter="dapai"/>
                <MenuItem
					Header="生成状态机(可视化)" Click="Gene_StateMachine_MenuItem_Click"/>
                <Separator />
                <MenuItem
					Header="代码生成向导..." />
            </MenuItem>
            <MenuItem
				Header="代码转换(_T)">
                <MenuItem
					Header="Verilog转VHDL" />
                <MenuItem
					Header="VHDL转Verilog" />
            </MenuItem>
            <MenuItem
				Header="设置(_S)">
                <MenuItem
					Click="SettingsMenuItem_Click" 
					Header="简单设置" />
            </MenuItem>
            <MenuItem
				Header="帮助(_H)">
                <MenuItem
					Header="打开帮助(_O)" />
                <Separator />
                <MenuItem
					Header="关于(_A)" />
            </MenuItem>
        </Menu>
        <ToolBar 
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2">
            <ToolBar.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                            <Setter Property="Opacity" Value="0.30" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToolBar.Resources>
            <Button Click="openFileBtn_Click">
                <Image Source="Images/Open.png" Height="16"/>
            </Button>
            <Button Command="Save">
                <Image Source="Images/Save.png" Height="16"/>
            </Button>
            <Separator/>
            <Button Command="Cut">
                <Image Source="Images/Cut.png" Height="16"/>
            </Button>
            <Button Command="Copy">
                <Image Source="Images/Copy.png" Height="16"/>
            </Button>
            <Button Command="Paste">
                <Image Source="Images/Paste.png" Height="16"/>
            </Button>
            <Button Command="Delete">
                <Image Source="Images/Delete.png" Height="16"/>
            </Button>
            <Separator/>
            <Button Command="Undo">
                <Image Source="Images/Undo.png" Height="16"/>
            </Button>
            <Button Command="Redo">
                <Image Source="Images/Redo.png" Height="16"/>
            </Button>
            <Separator/>
            <CheckBox IsChecked="{Binding ElementName=textEditor,Path=WordWrap}">
                <Image Source="Images/WordWrap.png" Height="16"/>
            </CheckBox>
            <CheckBox IsChecked="{Binding ElementName=textEditor,Path=ShowLineNumbers}">
                <TextBlock Width="16" TextAlignment="Center">#</TextBlock>
            </CheckBox>
            <CheckBox IsChecked="{Binding ElementName=textEditor,Path=Options.ShowEndOfLine}">
                <TextBlock Width="16" TextAlignment="Center">¶</TextBlock>
            </CheckBox>
            <ComboBox Name="highlightingComboBox"
				SelectedItem="{Binding SyntaxHighlighting, ElementName=textEditor}"
				ItemsSource="{Binding Source={x:Static avalonEdit:HighlightingManager.Instance}, Path=HighlightingDefinitions}"
				SelectionChanged="HighlightingComboBox_SelectionChanged"/>
        </ToolBar>
        <Grid
			Grid.Row="2"
			Grid.ColumnSpan="2"
			Margin="0,5,0,8">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="auto" />
				<ColumnDefinition />
				<ColumnDefinition
					Width="auto" />
			</Grid.ColumnDefinitions>
			<TextBlock
				Margin="5,0,0,0"
				Grid.Column="0"
				Text="当前文件：" />
			<TextBox
				Grid.Column="1"
				HorizontalAlignment="Stretch"
				Foreground="Blue"
                BorderThickness="1"
			    BorderBrush="Black"
				Text="{Binding FileName}" />
			<Button
				Name="openFileBtn"
				Click="openFileBtn_Click"
				Grid.Column="2"
				Width="60"
				Content="浏览..."
				HorizontalAlignment="Right" />
		</Grid>
		<!--选择目录-->
        <Grid
			Grid.Row="3"
			Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition
					Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid
				Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
						Width="83" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock
					Margin="5,0,15,0"
					Background="White"
					Text="选择驱动器:" />
                <ComboBox
					Grid.Column="1"
					ItemsSource="{Binding Drivers}"
					SelectedItem="{Binding CurrentDriver}" />
            </Grid>
            <TreeView
				Grid.Row="1"
				x:Name="foldersItem"
				SelectedItemChanged="foldersItem_SelectedItemChanged"
				Width="Auto"
				Background="White"
				BorderBrush="White"
				Foreground="White">
                <TreeView.Resources>
                    <Style
						TargetType="{x:Type TreeViewItem}">
                        <Setter
							Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel
										Orientation="Horizontal">
                                        <Image
											Name="img"
											Width="20"
											Height="20"
											Stretch="Fill"
											Source="Images/folder.png" />
                                        <TextBlock
											Text="{Binding}"
											Margin="5,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.Resources>
            </TreeView>
        </Grid>
        <!--所有文件-->
        <Grid
			Grid.Row="4"
			Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition
					Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
					Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel
				Grid.Row="0"
				Grid.ColumnSpan="2">
                <Grid
					Margin="0,5,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
							Width="auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock
						Margin="5,0,0,0"
						Text="当前目录:" VerticalAlignment="Center"/>
                    <TextBox
						PreviewKeyDown="TextBox_PreviewKeyDown"
						Foreground="Blue"
						Grid.Column="1"
						BorderThickness="1"
						BorderBrush="Black"
						Margin="10,0,5,0"
						Text="{Binding CurrentFolder,Mode=OneWay}" />
                </Grid>
                <!--工具-->
                <Grid
			        Grid.Row="1"
			        Grid.ColumnSpan="2"
			        Margin="2,0,0,2">
                    <StackPanel Orientation="Horizontal">
                        <Button
					            Content="刷新"
					            Width="100"
					            Margin="5,0,0,0"
					            Click="refreshButton_Click" />
                        <Button
					            Content="分析目录"
					            Background="LightBlue"
					            Margin="5,0,0,0"
					            Click="startAnalyzeButton_Click"
					            Width="100" />
                        <CheckBox
					            Margin="5,2,0,0"
					            IsChecked="{Binding ContainsSubFolders,Mode=TwoWay}">包含子目录</CheckBox>
                    </StackPanel>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
							Width="auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock
						Margin="5,0,0,0"
						VerticalAlignment="Center"
						Text="选择文件类型:" />
                    <ComboBox
						Margin="15,0,5,0"
						Grid.Column="1"
						SelectedIndex="0"
						SelectionChanged="FileComboBox_SelectionChanged">
                        <ComboBox.Items>
                            <ComboBoxItem>Verilog和VHDL文件</ComboBoxItem>
                            <ComboBoxItem>仅Verilog文件</ComboBoxItem>
                            <ComboBoxItem>仅VHDL文件</ComboBoxItem>
                        </ComboBox.Items>
                    </ComboBox>
                </Grid>
            </StackPanel>
            <ListView
				Grid.Row="2"
				Grid.ColumnSpan="2"
				ItemsSource="{Binding FileList}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock
                            MouseDown="FileListTextBlock_MouseDown"
							ToolTip="{Binding Path=FullFileName}"
							Text="{Binding Path=FullFileName}"
                            Tag="{Binding Path=FullFileName}"
							Visibility="{Binding IsVisiable,Converter={StaticResource Bool2VisibilityConverter}}" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <Grid
			Grid.Row="3"
			Grid.Column="2"
			Grid.RowSpan="3">
			<TabControl Name="tabControl" Margin="5,0,5,0">
				<TabItem Header="当前文件">
					<Grid>
                        <avalonEdit:TextEditor
                                ShowLineNumbers="True"
				                Name="textEditor"
				                FontFamily="Consolas"
				                FontSize="14pt">
                        </avalonEdit:TextEditor>
                    </Grid>
				</TabItem>
				<TabItem
					Header="全部信息">
					<ScrollViewer
						VerticalScrollBarVisibility="Auto"
						HorizontalScrollBarVisibility="Auto">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="auto" />
								<RowDefinition
									Height="auto" />
								<RowDefinition
									Height="*" />
							</Grid.RowDefinitions>
							<TextBox
								Grid.Row="0"
								IsReadOnly="True"
								Name="totalInfoTextBox"
								Text="{Binding TotalInfo}"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch" />
							<StackPanel
								Grid.Row="1"
								Orientation="Horizontal">
								<Button
									Name="SaveTxtBtn"
									Content="信息输出到txt"
									Margin="5,5,0,0"
									Width="100"
									HorizontalAlignment="Left"
									Click="SaveTxtBtn_Click" />
							</StackPanel>
							<Grid
								Grid.Row="2"
								Name="chartContainer" />
						</Grid>
					</ScrollViewer>
				</TabItem>
				<TabItem
					Header="目录统计信息">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition
								Height="auto" />
						</Grid.RowDefinitions>
						<ScrollViewer
							HorizontalScrollBarVisibility="Auto"
							VerticalScrollBarVisibility="Auto">
							<DataGrid
								Name="fileDataGrid"
								LoadingRow="DataGrid_LoadingRow"
								CanUserAddRows="False"
								AutoGenerateColumns="False"
								ItemsSource="{Binding FileInfoList}">
								<DataGrid.Columns>
									<DataGridTemplateColumn
										IsReadOnly="True"
										Header="文件名">
										<DataGridTemplateColumn.CellTemplate>
											<DataTemplate>
												<TextBlock
													Mouse.MouseDown="FileListTextBlock_MouseDown"
													Text="{Binding FileName}"
													Background="{Binding ConclusionColor}"
													ToolTip="{Binding FullFileName}"
													Tag="{Binding FullFileName}">
													<TextBlock.ContextMenu>
														<ContextMenu>
															<MenuItem
																Header="打开文件"
																Click="OpenFileListMenuItem_Click" />
															<MenuItem
																Header="打开当前文件夹"
																Click="OpenFolderFileListMenuItem_Click" />
															<MenuItem
																Header="定位文件"
																Click="LocateFileListMenuItem_Click" />
															<MenuItem
																Header="复制完整路径"
																Click="CopyPathFileListMenuItem_Click" />
															<MenuItem
																Header="从列表删除"
																Click="DeleteFileListMenuItem_Click" />
														</ContextMenu>
													</TextBlock.ContextMenu>
												</TextBlock>
											</DataTemplate>
										</DataGridTemplateColumn.CellTemplate>
									</DataGridTemplateColumn>
									<DataGridTextColumn
										IsReadOnly="True"
										Header="总行数"
										Binding="{Binding TotalRowNum}" />
									<DataGridTextColumn
										IsReadOnly="True"
										Header="有效代码行数"
										Binding="{Binding ValidCodeRowNum}" />
									<DataGridTextColumn
										IsReadOnly="True"
										Header="空行数"
										Binding="{Binding BlankLineRowNum}" />
									<DataGridTextColumn
										IsReadOnly="True"
										Header="//注释行数"
										Binding="{Binding SimpleCommentRowNum}" />
									<DataGridTextColumn
										IsReadOnly="True"
										Header="/**/注释行数"
										Binding="{Binding ComplexCommentRowNum}" />
									<DataGridTextColumn
										IsReadOnly="True"
										Header="VHDL--注释行数"
										Binding="{Binding VhdlCommentRowNum}" />
									<DataGridTextColumn
										IsReadOnly="True"
										Header="总注释行数"
										Binding="{Binding TotalCommentRowNum}" />
									<DataGridTextColumn
										IsReadOnly="True"
										Header="注释比率"
										Binding="{Binding Percentage}" />
								</DataGrid.Columns>
							</DataGrid>
						</ScrollViewer>
						<StackPanel
							Grid.Row="1"
							Orientation="Horizontal"
							Margin="5,5,0,0">
							<Button
								Content="导出到Excel"
								Width="100"
								HorizontalAlignment="Left" />
							<TextBlock
								Width="auto"
								Text="处理进度："
								Margin="5,5,0,0" />
							<ProgressBar
								Width="300"
								Value="{Binding Progress}" />
							<TextBlock
								Width="auto"
								Text="{Binding Progress}"
								Margin="5,5,0,0" />
							<TextBlock
								Width="auto"
								Text="%"
								Margin="5,5,0,0" />
							<TextBlock
								Width="auto"
								Text="总文件数："
								Margin="5,5,0,0" />
							<TextBlock
								Width="auto"
								Text="{Binding FileListCount}"
								Margin="5,5,0,0" />
						</StackPanel>
					</Grid>
				</TabItem>
			</TabControl>
		</Grid>
		<GridSplitter
			Grid.Row="3"
			Grid.Column="1"
			Grid.RowSpan="4"
			Width="5"
			VerticalAlignment="Stretch"
			Background="LightGray"
			HorizontalAlignment="Left" />
		<GridSplitter
			IsEnabled="False"
			Grid.Row="2"
			Grid.Column="0"
			Grid.ColumnSpan="3"
			Height="5"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Bottom"
			Background="LightGray"/>
        <GridSplitter
			Grid.Row="5"
			Grid.Column="0"
			Height="5"
			HorizontalAlignment="Stretch"
			Background="LightGray"
			VerticalAlignment="Bottom" />
        
	</Grid>
</Window>